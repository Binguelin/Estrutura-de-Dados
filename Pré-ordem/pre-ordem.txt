//Algoritimo para percorrer uma arvore binaria
//utilizando utilizando o caminho de pré-ordem

pre-ordem(R):
//R é um ponteiro que aponta para a raiz da arvore
CREATE array A       //cria um vetor A de tamanho n igual ao tamanho da arvore
CREATE array B       // cria um vetor B de tamanho n igual ao tamanho da arvore
T = R                //T é um ponteiro auxiliar que aponta inicialmente para R
B[0] = T               //Indica que não existe mais nenhum nó para voltarmos
i = 0
j = 0
A[i] = T.info
if(T.dir != NULL)
    j = j + 1
    B[j] = T
WHILE (j!=-1):
    i = i + 1
    A[i] = T.info     //Adiciona o nó atual de T em A
    if(T.dir != NULL)
        j = j + 1
        B[j] = T
    if(T.esq != NULL)
        T = T.esq
    else
        if(T.esq == NULL)
            T = B[j].dir    //Retorna para o ultimo nó com filho direito
            B[j] = -1
            j = j - 1
return A             //Retorna o vetor com o percurso em pré-ordem
